import org.gradle.plugins.ide.eclipse.model.ProjectDependency
import java.text.SimpleDateFormat;

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'


sourceCompatibility = 1.7
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources = true
	}
}


configurations {
	compile.exclude module: 'commons-logging'
}

repositories {
    mavenCentral()
}

ext {
	springVersion = '4.2.4.RELEASE'
	springSecurityVersion = '4.0.3.RELEASE'
	mybatisVersion = '3.3.0'
	mybatisSpringVersion = '1.2.3'
	thymeleafVersion = '2.1.4.RELEASE'
	thymeleafLayoutVersion = '1.3.1'
	thymeleafExtrasVersion = '2.1.2.RELEASE'
	mysqlVersion = '5.1.38'
	gsonVersion = '2.5'
	slf4jVersion = '1.7.13'
	log4jVersion = '2.5'
	apacheCommonsVersion = '3.4'
	
	gitRevision = 'git rev-list --count HEAD'.execute().text.trim()
	gitShortHash = 'git rev-parse --short HEAD'.execute().text.trim()
	gitLongHash = 'git rev-parse HEAD'.execute().text.trim()
	gitBranch = 'git symbolic-ref --short HEAD'.execute().text.trim()
}

dependencies {
	
	compile project(':CarTracker.Common')
	compile project(':CarTracker.Data')
	compile project(':CarTracker.PlacesRequester')
	
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    
    //spring framework
    compile (group: 'org.springframework', name: 'spring-webmvc', version: "$springVersion")
    compile group: 'org.springframework', name: 'spring-jdbc', version: "$springVersion"
    
    //spring security
    compile group: 'org.springframework.security', name: 'spring-security-web', version: "$springSecurityVersion"
    compile group: 'org.springframework.security', name: 'spring-security-config', version: "$springSecurityVersion"
    
    //mybatis
    compile group: 'org.mybatis', name: 'mybatis', version: "$mybatisVersion"
    compile group: 'org.mybatis', name: 'mybatis-spring', version: "$mybatisSpringVersion"
    
    //thymeleaf
    compile group: 'org.thymeleaf', name: 'thymeleaf', version: "$thymeleafVersion"
    compile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: "$thymeleafVersion"
    compile group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: "$thymeleafLayoutVersion"
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: "$thymeleafExtrasVersion"
    
    //apache commons
    compile group: 'org.apache.commons', name: 'commons-lang3', version: "$apacheCommonsVersion"
    
    //mysql connector
    compile group: 'mysql', name: 'mysql-connector-java', version: "$mysqlVersion"
    
    //gson
    compile group: 'com.google.code.gson', name: 'gson', version: "$gsonVersion"
    
    //logging
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: "$log4jVersion"
    compile group: 'org.slf4j', name: 'slf4j-api', version: "$slf4jVersion"
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "$log4jVersion"
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
    
    providedCompile group: 'javax.servlet', name: 'servlet-api', version: '2.5'
    
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task createProperties(dependsOn: 'processResources') << {
	new File("$buildDir/resources/main/build.properties").withWriter { w ->
		Properties p = new Properties()
		p['version'] = project.version.toString()
		p['buildDate'] = buildTime()
		p['gitRevision'] = "${gitRevision}".toString()
		p['gitShortHash'] = "${gitShortHash}".toString()
		p['gitLongHash'] = "${gitLongHash}".toString()
		p['gitBranch'] = "${gitBranch}".toString()
		p.store w, null
	}
}

def buildTime() {
	def df = new SimpleDateFormat("yyyy-MM-dd' 'HH:mm:ss' UTC'")
	df.setTimeZone(TimeZone.getTimeZone("UTC"))
	return df.format(new Date())
}

classes {
	dependsOn createProperties
}
